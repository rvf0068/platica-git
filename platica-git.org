#+title: Git, un sistema para control de versiones
#+author: Rafael Villarroel
#+email: rafaelv@uaeh.edu.mx
#+date: 11 de diciembre de 2013
#+language: es

#+setupfile: opciones-platica-git.org

#+beamer: \setbeamertemplate{navigation symbols}{}
#+beamer: \languagepath{spanish}

* Introducción
** Control de versiones
   /Git/ es software que ayuda a llevar cuenta precisa de los cambios de
   archivos a través del tiempo.

   #+latex: \pause
   
   #+caption: Versiones
   #+attr_latex: :width 10cm 
   [[file:versionesmorse.png]]

** En la línea de comandos
   :PROPERTIES:
   :BEAMER_act: [<+->]
   :END:

   - Como \LaTeX, /Git/ es un programa que corre en la línea de comandos
     (terminal).
   - Como con \LaTeX, existen muchas interfases gráficas para /Git/.

** Estados de un repositorio

#+BEGIN_LaTeX
  \usetikzlibrary{positioning,shapes}
  \begin{center}
  \begin{tikzpicture}[scale=0.8,transform shape,head/.style={line width=2pt,draw=gray,text width=2cm,align=center}]
    \node[head,fill=green!60!black!50] (wd) {No incluido};
    \node[head,fill=yellow!40,right=of wd] (sa) {Guardado (``limpio'')};
    \node[head,fill=blue!40,right=of sa] (lr) {Modificado};
    \node[head,fill=red!40,right=2cm of lr] (rr) {Enviado al ``índice''};
    \begin{scope}[line width=2pt,gray]
      \foreach \box in {wd,sa,lr,rr}
      \draw (\box.south) -- +(0,-5cm);
    \end{scope}
    \begin{scope}[every node/.style={single arrow, draw=none,fill=red!50,anchor=west,align=center}]
      \node [anchor=west,text width=2.55cm] at ([yshift=-1cm]wd.south)
      {añadir al\\ repositorio};
      \node [anchor=west,text width=2.8cm] at ([yshift=-2cm]sa.south)
      {editar};
      \node [anchor=west,text width=3.8cm] at ([yshift=-3cm]lr.south) {``stage''};
      \node [anchor=east,text width=7.1cm,shape border rotate=180] at ([yshift=-4cm]rr.south) {``commit''};
    \end{scope}
  \end{tikzpicture}
  \end{center}
#+END_LaTeX

** Repositorios remotos
   /Git/ facilita compartir repositorios en la red, para proyectos donde
   participan varias personas.

** Frame (beamer_act, not quite right)
*** The problem on this frame
    I want Block 1 and Block 2 to occupy the same space on successive 
slides.
*** OnlyEnv 1                                                     :B_onlyenv:
    :PROPERTIES:
    :BEAMER_env: onlyenv
    :BEAMER_ACT: <1>
    :END:
**** Block 1
     Text
*** OnlyEnv 2                                                     :B_onlyenv:
    :PROPERTIES:
    :BEAMER_env: onlyenv
    :BEAMER_ACT: <2>
    :END:
**** Block 2
     Text 2
** Things

   #+attr_beamer: :overlay +-
   - foo :: the first thing I want to talk about
   - bar :: this is the second, follows the first
   - baz :: third and final

* Comandos básicos
** git config

*** 

#+BEGIN_SRC sh
  $ git config --global user.name "Rafael Villarroel"
  $ git config --global user.email "rvf0068@gmail.com"
#+END_SRC

** git init

#+BEGIN_SRC sh
  ~$ mkdir Documents/MiDirectorio
  ~$ cd Documents/MiDirectorio
  ~/Documents/MiDirectorio$ git init
  Initialized empty Git repository in /home/rafael/Documents/MiDirectorio/.git/
#+END_SRC

** git status
** git add
** git commit
** git log
** el archivo .gitignore
* magit
** Emacs
   magit corre en Emacs, pero es natural pues Emacs sirve para editar
   todo tipo de archivos de texto.

* COMMENT Maintenance

# Local Variables:
# org-latex-pdf-process: ("pdflatex -interaction nonstopmode -output-directory %o %f")
# eval: (set-input-method "spanish-prefix")  
# End:
